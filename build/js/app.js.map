{"version":3,"sources":["app.js"],"names":["document","addEventListener","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","registration","wrap","_context","prev","next","navigator","serviceWorker","register","sent","installing","console","log","active","t0","error","concat","stop","apply","this","arguments","registerServiceWorker","window","topBtn","querySelector","body","scrollTop","documentElement","classList","add","remove","header","getElementById","pageYOffset","trapTapKey","evt","fullscreenMenu","contains","keyCode","shiftKey","activeElement","firstFocusableElement","preventDefault","lastFocusableElement","focus","removeEventListener","menuBtn","documentLang","lang","toggle","setAttribute","themeBtn","localStorage","getItem","checked","setItem"],"mappings":"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","file":"app.js","sourcesContent":["/* ---- Start PWA Service Worker ---- */\r\nconst registerServiceWorker = async () => {\r\n  if ('serviceWorker' in navigator) {\r\n\r\n    try {\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n\r\n      if (registration.installing) {\r\n        console.log('Service worker installing');\r\n\r\n      } else if (registration.waiting) {\r\n        console.log('Service worker installed');\r\n\r\n      } else if (registration.active) {\r\n        console.log('Service worker active');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(`Registration failed with ${err}`);\r\n    }\r\n  }\r\n};\r\n\r\nregisterServiceWorker();\r\n\r\n\r\n/* ---- Show go to top button ---- */\r\nconst showTopBtn = () => {\r\n\tconst topBtn = document.querySelector('.top-btn');\r\n\r\n\t(document.body.scrollTop > 300) || (document.documentElement.scrollTop > 300)\r\n    ? topBtn.classList.add('show')\r\n    : topBtn.classList.remove('show');\r\n};\r\n\r\nwindow.addEventListener('scroll', showTopBtn);\r\n\r\n\r\n/* ---- Scroll to top function ---- */\r\nconst scrollToTop = () => {\r\n\tdocument.body.scrollTop = 0; // For Safari\r\n\tdocument.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n};\r\n\r\ndocument.querySelector('.top-btn').addEventListener('click', scrollToTop);\r\n\r\n\r\n/* ---- Start Change Header Background Color On Scroll ---- */\r\nconst changeHeaderBg = () => {\r\n\r\n  const header = document.getElementById('site-header');\r\n\r\n  (window.pageYOffset > 100)\r\n    ? header.classList.add('change--bg')\r\n    : header.classList.remove('change--bg');\r\n}\r\n\r\ndocument.addEventListener('scroll', changeHeaderBg);\r\n\r\n\r\n/* ---- Start Toggle Fullscreen Menu ---- */\r\nconst toggleMenu = () => {\r\n\r\n  const menuBtn               = document.querySelector('.toggle-menu'),\r\n        fullscreenMenu        = document.querySelector('.fullscreen-menu'),\r\n        header                = document.getElementById('site-header'),\r\n        firstFocusableElement = document.querySelector('.site-logo a'),\r\n        lastFocusableElement  = document.querySelector('.theme-btn'),\r\n        documentLang          = document.documentElement.lang;\r\n\r\n  // Toggle fullscreen menu\r\n  menuBtn.classList.toggle('open');\r\n  fullscreenMenu.classList.toggle('show');\r\n  document.body.classList.toggle('disable--scrolling');\r\n\r\n  // Remove change header background color on scroll\r\n  if (window.pageYOffset > 100) {\r\n    header.classList.toggle('change--bg');\r\n  }\r\n\r\n  // Hide go to top button\r\n  if ((document.body.scrollTop > 300) || (document.documentElement.scrollTop > 300)) {\r\n    document.querySelector('.top-btn').classList.toggle('show');\r\n  }\r\n\r\n  // Accessibility\r\n  if (menuBtn.classList.contains('open')) {\r\n\r\n    documentLang === 'ar'\r\n      ? menuBtn.setAttribute('aria-label', 'اغلق القائمة')\r\n      : menuBtn.setAttribute('aria-label', 'close menu');\r\n\r\n  } else {\r\n\r\n    documentLang === 'ar'\r\n      ? menuBtn.setAttribute('aria-label', 'افتح القائمة')\r\n      : menuBtn.setAttribute('aria-label', 'open menu');\r\n  }\r\n\r\n  // Keyboard focus trap\r\n  const trapTapKey = (evt) => {\r\n\r\n    if (!fullscreenMenu.classList.contains('show')) {\r\n\r\n      document.removeEventListener('keydown', trapTapKey);\r\n      return;\r\n    }\r\n\r\n    // Check if the Tab key was pressed\r\n    if (evt.keyCode === 9) {\r\n\r\n      if (evt.shiftKey) {\r\n\r\n        if (document.activeElement === firstFocusableElement) {\r\n\r\n          evt.preventDefault();\r\n          lastFocusableElement.focus();\r\n        }\r\n\r\n      } else {\r\n\r\n        if (document.activeElement === lastFocusableElement) {\r\n\r\n          evt.preventDefault();\r\n          firstFocusableElement.focus();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  document.addEventListener('keydown', trapTapKey);\r\n};\r\n\r\ndocument.querySelector('.toggle-menu').addEventListener('click', toggleMenu);\r\n\r\n\r\n/* ---- Start Toggle Dark Theme ---- */\r\nconst themeBtn = document.getElementById('theme-btn');\r\n\r\nif (window.localStorage.getItem('darkTheme') === 'true') {\r\n\r\n  document.body.classList.add('dark-theme');\r\n  themeBtn.checked = true;\r\n  themeBtn.setAttribute('aria-checked', 'true');\r\n}\r\n\r\nconst toggleTheme = () => {\r\n\r\n  document.body.classList.toggle('dark-theme');\r\n\r\n  if (window.localStorage.getItem('darkTheme') === 'true') {\r\n\r\n    window.localStorage.setItem('darkTheme', 'false');\r\n    themeBtn.setAttribute('aria-checked', 'false');\r\n\r\n  } else {\r\n\r\n    window.localStorage.setItem('darkTheme', 'true');\r\n    themeBtn.setAttribute('aria-checked', 'true');\r\n  }\r\n};\r\n\r\nthemeBtn.addEventListener('change', toggleTheme);\r\n"]}